@startuml MainConcepts
!define MyTheme
skinparam class {
    BackgroundColor #LightYellow
    BorderColor #000000
    FontColor #000000
}

skinparam stereotypeCBackgroundColor #LightYellow
skinparam stereotypeCBorderColor #000000
skinparam stereotypeCFontColor #000000

class Main

package algorithm {
    interface MazeAlgorithm {
        + getPath(factorized: boolean)
    }

    class RightHand

    class BFS
}

package configuration {
    class Configuration {
        + load(args: String[])
    }

    enum Method {
        RIGHTHAND, BFS
    }
}

package benchmark {
    class AlgorithmBenchmark

    interface Benchmark {
        + runBenchmark()
        + generateReport()
    }
}

package explorer {
    interface Explorer {
        + goRight()
        + goLeft()
        + goForward()
        + goBackward()
    }

    class MazeExplorer
}

package maze {
    interface Maze {
        + getNeighbours(loc: Location)
        + findWestEntry()
        + findEastEntry()
        + getTile(loc: Location)

    }

    class ListMaze

    enum Tile {
        EMPTY, WALL
    }
}

package path {
    enum Instruction {
        F, L, R
    }

    class Path

    class PathBuilder {
        + buldPath(str: String)
    }
}

package position {
    enum Direction {
        NORTH, EAST
        SOUTH, WEST
    }

    class Location {
        + equals(o: Object)
    }
}

package verification {
    interface Verifier {
        + verify()
    }

    Class PathVerifier
}

Main *--left> MazeAlgorithm
Main *--up> Verifier
Main *--down> Benchmark

Maze <|..up ListMaze
ListMaze *--up> Tile

BFS ..down|> MazeAlgorithm
RightHand ..down|> MazeAlgorithm

Main *--> Configuration

Configuration o--up> PathBuilder

MazeExplorer *--up> Location
Location *--up> Direction

RightHand *--up> Explorer
BFS --up> Maze

MazeExplorer ..down|> Explorer

Path *--left> Instruction

PathVerifier ..|> Verifier
PathVerifier --> Maze
PathVerifier o--> Path

AlgorithmBenchmark ..|> Benchmark
AlgorithmBenchmark *--> MazeAlgorithm

MazeExplorer --up> Maze

Configuration --down> Method

AlgorithmBenchmark --up> Method
AlgorithmBenchmark *--right> Maze

@enduml